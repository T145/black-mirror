name: Publish Lists to GitHub

on:
  workflow_dispatch:
  schedule:
    - cron: "27 1,13 * * *"

jobs:
  github:
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/t145/black-mirror:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ github.token }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate lists
        id: build
        run: ./scripts/github/workflow.bash
        shell: bash

      - name: Get latest commit from previous release
        id: old_release
        run: ./scripts/github/get_oldest_commit.bash
        shell: bash

      - name: Dump output context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
        shell: bash

      # This prevents asset upload collisions later, which result in asset names that include hashes.
      - name: Remove old release assets
        if: steps.build.outputs.status == 'success'
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: latest
          assets: |
            *.txt
            *.checksums

      - name: Create GitHub release
        if: steps.build.outputs.status == 'success'
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          # https://docs.github.com/en/actions/security-guides/automatic-token-authentication#using-the-github_token-in-a-workflow
          repo_token: ${{ secrets.FOR_WEBHOOKS_SECRET }}
          automatic_release_tag: latest
          prerelease: false
          title: All Artifacts
          files: build/*

      - name: Update changelog
        if: steps.build.outputs.status == 'success' && steps.old_release.conclusion == 'success'
        run: |
          echo -n '## ' >>CHANGELOG.md
          date +"%d-%m-%Y %T" >>CHANGELOG.md
          git log --oneline "${{ steps.old_release.outputs.latest_commit }}..$(git log -n 1 --pretty=format:%H --)" >>CHANGELOG.md
        shell: bash

      - name: Remove build artifacts
        if: always()
        run: rm -rf build/
        shell: bash

      - name: Commit updated documents
        if: steps.build.outputs.status == 'success'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          # homage to the python linting utility "black"
          commit_message: ‚ú®üç∞‚ú®
