name: Publish Lists to GitHub

on:
  schedule:
    - cron: "27 1,13 * * *"

jobs:
  github:
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/t145/black-mirror:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ github.token }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate lists
        id: build
        run: ./scripts/github/workflow.bash
        shell: bash

      - name: Dump build context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
        shell: bash

      - name: Remove old release assets
        if: steps.build.outputs.status == 'success'
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: latest
          assets: |
            *.txt
            *.checksums

      - name: Create GitHub release
        if: steps.build.outputs.status == 'success'
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          # https://docs.github.com/en/actions/security-guides/automatic-token-authentication#using-the-github_token-in-a-workflow
          repo_token: ${{ secrets.FOR_WEBHOOKS_SECRET }}
          automatic_release_tag: latest
          prerelease: false
          title: All Artifacts
          files: build/*

      - name: Get release data
        if: steps.build.outputs.status == 'success'
        id: release_data
        uses: KevinRohn/github-full-release-data@v2.0.0
        with:
          token: ${{ secrets.FOR_WEBHOOKS_SECRET }}

      - name: Update changelog
        if: steps.build.outputs.status == 'success'
        uses: stefanzweifel/changelog-updater-action@v1
        with:
          latest-version: latest
          release-notes: ${{ fromJSON(steps.release_data.outputs.body) }}

      - name: Remove local artifacts
        if: always()
        run: rm -rf build/
        shell: bash

      - name: Update the README, CHANGELOG, and logs
        if: success()
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          # homage to the python linting utility "black"
          commit_message: ‚ú®üç∞‚ú®
