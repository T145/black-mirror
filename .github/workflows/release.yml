name: Create Release

on:
  #repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  create_release:
    runs-on: ubuntu-20.04

    steps:
      - name: Clone Repo
        uses: actions/checkout@latest
        with:
          ref: ${{ github.head_ref }}

      - name: Prepare Workspace
        run: |
          sudo apt install aria2 gawk golang-go ipcalc jq libnet-libidn-perl libnet-idn-encode-perl miller moreutils openjdk-16-jre-headless sed p7zip-full -y
          chmod 755 -R ./scripts
        shell: bash

      - name: Fix Sources
        run: |
          jq -S -M '.' sources/sources.json > temp.json
          mv temp.json sources/sources.json
        shell: bash

      - name: Export Sources in Pihole Format
        run: jq -jr 'to_entries[] | select(.value.color == "black") | .value.mirrors[0] as $url | .value.filters[] | if (.engine == "cat" or .engine == "mawk") then ($url, " ") else empty end' sources/sources.json | sed 's/ $/\n/' >sources/sources.pihole
        shell: bash

      - name: Export Sources in Text Format
        run: jq -r 'to_entries[].value.mirrors[]' sources/sources.json >sources/sources.txt
        shell: bash

      - name: Reset Aria2 Log
        run: |
          rm logs/aria2.log
          touch logs/aria2.log
        shell: bash

      - name: Create Builds
        run: ./scripts/create_builds.bash
        shell: bash

      - name: Update README.md
        run: ./scripts/update_readme.bash
        shell: bash

      - name: Publish Domain Release
        if: ${{ success() }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: latest-domain
          prerelease: false
          title: Domain Builds
          files: |
            black_domain*

      - name: Publish IPv4 Release
        if: ${{ success() }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: latest-ipv4
          prerelease: false
          title: IPv4 Builds
          files: |
            black_ipv4*

      - name: Publish IPv6 Release
        if: ${{ success() }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: latest-ipv6
          prerelease: false
          title: IPv6 Builds
          files: |
            black_ipv6*

      - name: Remove Artifacts
        if: ${{ always() }}
        run: |
          rm *.txt
          rm *.md5
          rm *.sha1
          rm *.sha256

      - name: Auto Commit
        if: ${{ success() }}
        uses: stefanzweifel/git-auto-commit-action@latest
        with:
          commit_message: ðŸ”¼ Auto Update
